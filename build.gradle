apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'


repositories {
  mavenCentral()
}

allprojects {
  dependencies {
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-all:[1.8.5,)'

    compile 'commons-codec:commons-codec:1.6'
    compile 'io.netty:netty:3.5.7.Final'

    // logging
    compile 'org.slf4j:slf4j-api:1.7.+'
    testRuntime 'org.slf4j:slf4j-ext:1.7.+'
    testRuntime 'org.slf4j:jcl-over-slf4j:1.7.+'
    testRuntime 'org.slf4j:jul-to-slf4j:1.7.+'
    testRuntime 'org.slf4j:log4j-over-slf4j:1.7.+'
    
    testRuntime 'ch.qos.logback:logback-core:1.0.+'
    testRuntime 'ch.qos.logback:logback-classic:1.0.+'

     compile 'org.codehaus.groovy:groovy-all:2.1.0'
  }
}

task runJava(type: JavaExec) {
     println( "-- Groovy version: " + groovy.lang.GroovySystem.getVersion() )
     dependsOn classes
     description = 'Run gradle.sample.SampleApp'
     // Java main class to execute.
     main = 'org.xbill.Lookup'
     // We need to set the classpath.
     classpath sourceSets.main.runtimeClasspath
     // Extra options can be set.
     systemProperty 'sysProp', 'notUsed'
     jvmArgs '-client'
     // We can pass arguments to the main() method
     // of gradle.sample.SampleApp.
     args 'www.yahoo.com'
}

task runGroovy(type: JavaExec) {
     println( "-- Groovy version: " + groovy.lang.GroovySystem.getVersion() )
     dependsOn classes
     description = 'Run gradle.sample.SampleApp'
     // Java main class to execute.
     main = 'org.lookup'
     // We need to set the classpath.
     classpath sourceSets.main.runtimeClasspath
     // Extra options can be set.
     systemProperty 'sysProp', 'notUsed'
     jvmArgs '-client'
     // We can pass arguments to the main() method
     // of gradle.sample.SampleApp.
     args 'www.yahoo.com'
}


// 